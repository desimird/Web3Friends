{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_adress",
						"type": "address"
					}
				],
				"name": "request_accepted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_adress",
						"type": "address"
					}
				],
				"name": "request_declined",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_adress",
						"type": "address"
					}
				],
				"name": "request_sent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_adress",
						"type": "address"
					}
				],
				"name": "user_registered",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_otherUserAddr",
						"type": "address"
					}
				],
				"name": "accept_request",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string[]",
						"name": "names",
						"type": "string[]"
					},
					{
						"internalType": "address[]",
						"name": "addresses",
						"type": "address[]"
					}
				],
				"name": "addDummyUsers",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_otherUserAddr",
						"type": "address"
					}
				],
				"name": "decline_request",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "get_all_users",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "my_address",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "address[]",
								"name": "friends_list",
								"type": "address[]"
							},
							{
								"internalType": "address[]",
								"name": "friend_requests_list",
								"type": "address[]"
							}
						],
						"internalType": "struct FriendshipPlatform.User[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "id_addresses_link",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "userAddress",
						"type": "address"
					}
				],
				"name": "isUserExist",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					}
				],
				"name": "register_new_user",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "friend",
						"type": "address"
					}
				],
				"name": "removeFriendRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_otherUserAddr",
						"type": "address"
					}
				],
				"name": "send_request",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "users",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "my_address",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"test/test/src/contract/FriendshipPlatform.sol": "FriendshipPlatform"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"test/test/src/contract/FriendshipPlatform.sol": {
			"keccak256": "0x4ed17cc1363ea962f78436ef603d05b81d29ade0604a5c80692120137a7ba5ff",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://938721280cc24ca339cd2beca0f8bca63c2fc0098cf1edd8794e988ad49e9603",
				"dweb:/ipfs/QmYKiXzFjkUXBttdjKZE8X6KwRWrx4LYnvXMjEd8TCqRDg"
			]
		}
	},
	"version": 1
}